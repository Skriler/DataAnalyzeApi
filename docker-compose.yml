version: "3.9"
services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: datasets_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - data-analyze-api-network

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - data-analyze-api-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      - data-analyze-api-network
    depends_on:
      - postgres

  data-analyze-api:
    image: data-analyze-api:latest
    container_name: data-analyze-api
    restart: always
    pull_policy: never
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080

      # Postgres config
      - Postgres__Host=postgres
      - Postgres__Username=${POSTGRES_USER}
      - Postgres__Password=${POSTGRES_PASSWORD}

      # Redis config
      - Redis__Host=redis

      # JWT config
      - JwtConfig__Secret=${JWT_SECRET}

      # Identity admin user
      - Identity__AdminUser__Username=${ADMIN_USERNAME}
      - Identity__AdminUser__Email=${ADMIN_EMAIL}
      - Identity__AdminUser__FirstName=${ADMIN_FIRSTNAME}
      - Identity__AdminUser__LastName=${ADMIN_LASTNAME}
      - Identity__AdminUser__Password=${ADMIN_PASSWORD}
    expose:
      - "8080"
    networks:
      - data-analyze-api-network
    depends_on:
      - postgres
      - redis

  data-analyze-frontend:
    image: data-analyze-frontend:latest
    container_name: data-analyze-frontend
    restart: always
    pull_policy: never
    expose:
      - "80"
    networks:
      - data-analyze-api-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/lib/nginx-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/lib/nginx-config/conf.d:/etc/nginx/conf.d:ro
      - nginxlogs:/var/log/nginx
    networks:
      - data-analyze-api-network
    depends_on:
      - data-analyze-api
      - data-analyze-frontend

volumes:
  pgdata:
  redisdata:
  pgadmindata:
  nginxlogs:

networks:
  data-analyze-api-network:
    driver: bridge
